{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Theoretical Foundation: Derivation of Projectile Motion Equations This section derives the equations governing projectile motion from Newton's second law, formulating differential equations for two-dimensional motion under gravity and solving them. 1. Newton's Second Law and Forces Projectile motion is governed by Newton's second law, \\(\\vec{F} = m \\vec{a}\\) , with gravity as the sole force: $$ \\vec{F} = -mg \\hat{j}, \\quad \\vec{a} = -g \\hat{j}. $$ In components: $$ a_x = 0, \\quad a_y = -g. $$ 2. Differential Equations of Motion Acceleration is the second derivative of position \\(\\vec{r}(t) = (x(t), y(t))\\) : $$ \\frac{d^2 x}{dt^2} = 0, \\quad \\frac{d^2 y}{dt^2} = -g. $$ 3. Solving the Horizontal Component Integrate \\(\\frac{d^2 x}{dt^2} = 0\\) : $$ \\frac{dx}{dt} = v_x, \\quad x(t) = v_x t + x_0. $$ With \\(x_0 = 0\\) and \\(v_x = v_0 \\cos\\theta\\) : $$ x(t) = v_0 \\cos\\theta \\, t. $$ 4. Solving the Vertical Component Integrate \\(\\frac{d^2 y}{dt^2} = -g\\) : $$ \\frac{dy}{dt} = -g t + v_y, \\quad y(t) = -\\frac{1}{2} g t^2 + v_y t + y_0. $$ With \\(v_y = v_0 \\sin\\theta\\) and \\(y_0 = h\\) : $$ y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h. $$ 5. General Equations of Motion Combine both components: $$ \\vec{r}(t) = (v_0 \\cos\\theta \\, t, -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h). $$ Eliminate \\(t\\) : $$ y(x) = -\\frac{g}{2 v_0^2 \\cos^2\\theta} x^2 + \\tan\\theta \\, x + h. $$ 6. Family of Solutions and Initial Conditions The equations depend on \\(v_0\\) , \\(\\theta\\) , and \\(h\\) . For \\(h = 0\\) , solve \\(y(t) = 0\\) : $$ t = \\frac{2 v_0 \\sin\\theta}{g}. $$ The range \\(R\\) is: $$ R = \\frac{v_0^2 \\sin 2\\theta}{g}. $$ This family of solutions illustrates the versatility of projectile motion. Analysis of the Range: Dependence on Angle of Projection This section analyzes the horizontal range of a projectile as a function of the angle of projection, leveraging the equations derived previously. We determine the time of flight, investigate trigonometric dependencies, explore parameter effects, and identify critical angles, maintaining a theoretical focus without numerical computation. 1. Expressing the Horizontal Range The horizontal range \\(R\\) is the distance traveled along the x-axis when the projectile returns to a specified height (typically \\(y = 0\\) for level ground). From the position equations: $$ x(t) = v_0 \\cos\\theta \\, t, \\quad y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h, $$ \\(R\\) is \\(x(t)\\) evaluated at the time of flight \\(t_f\\) , when \\(y(t_f) = 0\\) . Thus: $$ R = x(t_f) = v_0 \\cos\\theta \\, t_f. $$ The expression for \\(t_f\\) is derived next. 2. Determining the Time of Flight The time of flight \\(t_f\\) is the duration from launch to landing. Set \\(y(t) = 0\\) for a projectile launched from height \\(h\\) : $$ 0 = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h. $$ This is a quadratic equation in \\(t\\) : $$ -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h = 0. $$ Multiply through by \\(-2/g\\) to simplify: $$ t^2 - \\frac{2 v_0 \\sin\\theta}{g} t - \\frac{2 h}{g} = 0. $$ Solve using the quadratic formula \\(t = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\) , where \\(a = 1\\) , \\(b = -\\frac{2 v_0 \\sin\\theta}{g}\\) , \\(c = -\\frac{2 h}{g}\\) : $$ t = \\frac{\\frac{2 v_0 \\sin\\theta}{g} \\pm \\sqrt{\\left(\\frac{2 v_0 \\sin\\theta}{g}\\right)^2 - 4 \\cdot 1 \\cdot \\left(-\\frac{2 h}{g}\\right)}}{2}. $$ Simplify the discriminant: $$ \\Delta = \\left(\\frac{2 v_0 \\sin\\theta}{g}\\right)^2 + \\frac{8 h}{g} = \\frac{4 v_0^2 \\sin^2\\theta}{g^2} + \\frac{8 h}{g}. $$ Thus: $$ t = \\frac{\\frac{2 v_0 \\sin\\theta}{g} \\pm \\sqrt{\\frac{4 v_0^2 \\sin^2\\theta + 8 h g}{g^2}}}{2} = \\frac{v_0 \\sin\\theta \\pm \\sqrt{v_0^2 \\sin^2\\theta + 2 h g}}{g}. $$ For \\(h = 0\\) (level ground), this reduces to: $$ t_f = \\frac{2 v_0 \\sin\\theta}{g}, $$ selecting the positive root (time after launch). Substitute into the range: $$ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} = \\frac{2 v_0^2 \\sin\\theta \\cos\\theta}{g}. $$ Using the identity \\(2 \\sin\\theta \\cos\\theta = \\sin 2\\theta\\) : $$ R = \\frac{v_0^2 \\sin 2\\theta}{g}. $$ 3. Variation with Angle of Projection The range \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) depends on \\(\\sin 2\\theta\\) , which varies with \\(\\theta\\) : - At \\(\\theta = 0^\\circ\\) or \\(90^\\circ\\) , \\(\\sin 2\\theta = 0\\) , so \\(R = 0\\) (no horizontal travel). - The term \\(\\sin 2\\theta\\) oscillates between \\(-1\\) and \\(1\\) , with a maximum of \\(1\\) when \\(2\\theta = 90^\\circ\\) (i.e., \\(\\theta = 45^\\circ\\) ). - Symmetry exists: \\(\\sin 2(90^\\circ - \\theta) = \\sin (180^\\circ - 2\\theta) = \\sin 2\\theta\\) , so \\(R(\\theta) = R(90^\\circ - \\theta)\\) (e.g., \\(30^\\circ\\) and \\(60^\\circ\\) yield equal ranges). This trigonometric dependence indicates \\(R\\) peaks at an intermediate angle and decreases symmetrically around it. 4. Effect of Parameters Initial Velocity ( \\(v_0\\) ) : Since \\(R \\propto v_0^2\\) , doubling \\(v_0\\) quadruples \\(R\\) , amplifying the range for all angles. The shape of \\(R\\) vs. \\(\\theta\\) remains unchanged, but the amplitude scales. Gravitational Acceleration ( \\(g\\) ) : \\(R \\propto 1/g\\) , so increasing \\(g\\) (e.g., on a planet with stronger gravity) reduces \\(R\\) proportionally. The angle dependence persists, but the curve compresses vertically. Initial Height ( \\(h\\) ) : For \\(h > 0\\) , \\(t_f\\) increases (per the quadratic solution), extending \\(R\\) . The maximum range angle shifts below \\(45^\\circ\\) , as vertical flight time contributes more to horizontal distance. 5. Key Angles Maximum Range Angle : For \\(h = 0\\) , \\(R\\) is maximized when \\(\\sin 2\\theta = 1\\) , i.e., \\(\\theta = 45^\\circ\\) , balancing horizontal and vertical components optimally. Complementary Angles : Pairs like \\(30^\\circ\\) and \\(60^\\circ\\) yield identical ranges due to \\(\\sin 2\\theta\\) symmetry. Effect of Height : When \\(h \\neq 0\\) , the optimal angle decreases, derivable by maximizing the full range expression (not computed here). Practical Applications of Projectile Motion This section explores the relevance of projectile motion in real-world contexts, modifications to the idealized model, and the impact of simplifying assumptions. The equations \\(x(t) = v_0 \\cos\\theta \\, t\\) and \\(y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h\\) with range \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) for \\(h = 0\\) serve as the foundation. 1. Real-World Scenarios Projectile motion is crucial in: Sports : Basketball shots, soccer kicks, and golf drives follow parabolic paths influenced by \\(\\theta\\) and \\(v_0\\) . Military : Artillery shells' trajectories depend on \\(v_0\\) and \\(\\theta\\) , with terrain and wind affecting predictions. Space Exploration : Initial rocket phases resemble projectile motion, with \\(g\\) varying with altitude. 2. Modifications for Uneven Terrain For uneven terrain, adjust the final height \\(y_f\\) : \\[ y_f = -\\frac{1}{2} g t_f^2 + v_0 \\sin\\theta \\, t_f + h. \\] Solve for \\(t_f\\) : $$ t_f = \\frac{v_0 \\sin\\theta \\pm \\sqrt{(v_0 \\sin\\theta)^2 - 2 g (h - y_f)}}{g}. $$ The range is: $$ R = v_0 \\cos\\theta \\, t_f. $$ 3. Incorporating Air Resistance Air resistance, modeled as \\(F_d = -k v\\) or \\(F_d = -c v^2\\) , modifies the equations of motion: $$ \\frac{d^2 x}{dt^2} = -\\frac{c}{m} \\dot{x}, \\quad \\frac{d^2 y}{dt^2} = -g - \\frac{c}{m} \\dot{y}. $$ These require numerical methods for solutions, reducing range and altering trajectory shape. 4. Simplifying Assumptions and Their Impact Assumptions like no drag, flat ground, constant \\(g\\) , and point mass simplify the model but limit accuracy. Real-world scenarios need adjustments for air resistance, terrain, varying \\(g\\) , and object rotation. These refinements ensure more accurate predictions beyond the idealized \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) . Conclusion The theoretical framework provides a rigorous foundation for analyzing projectile range as a function of the angle of projection, with dependencies on initial velocity \\(v_0\\) , angle \\(\\theta\\) , and initial height \\(h\\) . For \\(h = 0\\) , the range is expressed as \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) . Introducing a non-zero \\(h\\) extends flight time and shifts the optimal angle. This model applies to sports, military, and space exploration, but requires adaptations for real-world dynamics. Adjustments for uneven terrain, air resistance, and varying \\(g\\) enhance predictive accuracy. Computational simulations and visualizations clarify parametric effects and practical implications. These efforts underscore the versatility of projectile motion, providing a robust platform for theoretical and practical applications. Codes and Plots Range vs. Angle for Varying Initial Velocities import numpy as np import matplotlib.pyplot as plt # Constants v0 = 20.0 # Initial velocity (m/s) g = 9.81 # Gravitational acceleration (m/s^2) # Angle array (0 to 90 degrees, in radians) theta_deg = np.linspace(0, 90, 91) # Degrees theta = np.radians(theta_deg) # Radians # Range calculation: R = (v0^2 * sin(2*theta)) / g R = (v0**2 * np.sin(2 * theta)) / g # Plotting plt.figure(figsize=(8, 6)) plt.plot(theta_deg, R, label=f'$v_0 = {v0} \\, \\mathrm{{m/s}}$', color='blue') plt.xlabel('Angle of Projection ($\\\\theta$, degrees)') plt.ylabel('Range ($R$, meters)') plt.title('Range vs. Angle of Projection ($h = 0$)') plt.grid(True) plt.legend() plt.show() Range vs. Angle with Initial Height import numpy as np import matplotlib.pyplot as plt # Constants v0 = 20.0 # Initial velocity (m/s) g = 9.81 # Gravitational acceleration (m/s^2) h_values = [0, 10, 20] # Initial heights (m) # Angle array theta_deg = np.linspace(0, 90, 91) theta = np.radians(theta_deg) # Plotting plt.figure(figsize=(8, 6)) for h in h_values: # Time of flight: t = (v0*sin(theta) + sqrt((v0*sin(theta))^2 + 2gh)) / g t_f = (v0 * np.sin(theta) + np.sqrt((v0 * np.sin(theta))**2 + 2 * g * h)) / g R = v0 * np.cos(theta) * t_f plt.plot(theta_deg, R, label=f'$h = {h} \\, \\mathrm{{m}}$') plt.xlabel('Angle of Projection ($\\\\theta$, degrees)') plt.ylabel('Range ($R$, meters)') plt.title('Range vs. Angle for Different Initial Heights') plt.grid(True) plt.legend() plt.show() Projectile Motion Demonstration Earth (g = 9.81 m/s\u00b2) Moon (g = 1.62 m/s\u00b2) Jupiter (g = 24.79 m/s\u00b2) Projectile Motion Comparison import numpy as np import matplotlib.pyplot as plt from matplotlib.animation import FuncAnimation from IPython.display import display, Image # Constants m = 1.0 # Mass (kg) v0 = 20.0 # Initial upward velocity (m/s) h0 = 0.0 # Initial height (m) # Gravitational accelerations (m/s^2) planets = { 'Earth': 9.81, # Earth 'Moon': 1.62, # Moon 'Jupiter': 24.79 # Jupiter } # Function to calculate position def height(t, v0, g, h0): return h0 + v0 * t - 0.5 * g * t**2 # Function to create and save animation as GIF def animate_projectile(planet, g): t_max = 2 * v0 / g t = np.linspace(0, t_max, 100) h = height(t, v0, g, h0) h = np.maximum(h, 0) fig, ax = plt.subplots(figsize=(6, 6)) ax.set_xlim([0, 1]) ax.set_ylim([0, 130]) # Fixed max height for comparison (Moon reaches ~123 m) ax.set_xlabel('Horizontal Distance (m)') ax.set_ylabel('Height (m)') ax.set_title(f'Projectile Motion on {planet} (g = {g} m/s\u00b2)') ax.grid(True) x_data = np.array([0.5]) ball, = ax.plot(x_data, [h[0]], 'ro', markersize=10, label='Object (1 kg)') ax.legend() def update(frame): ball.set_data(x_data, [h[frame]]) return ball, anim = FuncAnimation(fig, update, frames=range(len(t)), interval=50, repeat=True) gif_filename = f'{planet}_projectile.gif' anim.save(gif_filename, writer='pillow', fps=20) plt.close(fig) display(Image(filename=gif_filename)) # Static comparison plot def compare_trajectories(): fig, ax = plt.subplots(figsize=(10, 6)) ax.set_xlabel('Time (s)') ax.set_ylabel('Height (m)') ax.set_title('Projectile Motion Comparison: Earth, Moon, Jupiter') ax.grid(True) max_t = 2 * v0 / planets['Moon'] # Longest flight time (Moon) t = np.linspace(0, max_t, 200) for planet, g in planets.items(): h = height(t, v0, g, h0) h = np.maximum(h, 0) ax.plot(t, h, label=f'{planet} (g = {g} m/s\u00b2)') ax.set_ylim(0, 130) # Fixed scale to show Moon's max height ax.legend() plt.show() # Run animations for planet, g in planets.items(): animate_projectile(planet, g) # Show static comparison compare_trajectories() Website with different parameters ProjectileMotion Colab Colab","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation-derivation-of-projectile-motion-equations","text":"This section derives the equations governing projectile motion from Newton's second law, formulating differential equations for two-dimensional motion under gravity and solving them.","title":"Theoretical Foundation: Derivation of Projectile Motion Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-newtons-second-law-and-forces","text":"Projectile motion is governed by Newton's second law, \\(\\vec{F} = m \\vec{a}\\) , with gravity as the sole force: $$ \\vec{F} = -mg \\hat{j}, \\quad \\vec{a} = -g \\hat{j}. $$ In components: $$ a_x = 0, \\quad a_y = -g. $$","title":"1. Newton's Second Law and Forces"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-differential-equations-of-motion","text":"Acceleration is the second derivative of position \\(\\vec{r}(t) = (x(t), y(t))\\) : $$ \\frac{d^2 x}{dt^2} = 0, \\quad \\frac{d^2 y}{dt^2} = -g. $$","title":"2. Differential Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-solving-the-horizontal-component","text":"Integrate \\(\\frac{d^2 x}{dt^2} = 0\\) : $$ \\frac{dx}{dt} = v_x, \\quad x(t) = v_x t + x_0. $$ With \\(x_0 = 0\\) and \\(v_x = v_0 \\cos\\theta\\) : $$ x(t) = v_0 \\cos\\theta \\, t. $$","title":"3. Solving the Horizontal Component"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-solving-the-vertical-component","text":"Integrate \\(\\frac{d^2 y}{dt^2} = -g\\) : $$ \\frac{dy}{dt} = -g t + v_y, \\quad y(t) = -\\frac{1}{2} g t^2 + v_y t + y_0. $$ With \\(v_y = v_0 \\sin\\theta\\) and \\(y_0 = h\\) : $$ y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h. $$","title":"4. Solving the Vertical Component"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-general-equations-of-motion","text":"Combine both components: $$ \\vec{r}(t) = (v_0 \\cos\\theta \\, t, -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h). $$ Eliminate \\(t\\) : $$ y(x) = -\\frac{g}{2 v_0^2 \\cos^2\\theta} x^2 + \\tan\\theta \\, x + h. $$","title":"5. General Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-family-of-solutions-and-initial-conditions","text":"The equations depend on \\(v_0\\) , \\(\\theta\\) , and \\(h\\) . For \\(h = 0\\) , solve \\(y(t) = 0\\) : $$ t = \\frac{2 v_0 \\sin\\theta}{g}. $$ The range \\(R\\) is: $$ R = \\frac{v_0^2 \\sin 2\\theta}{g}. $$ This family of solutions illustrates the versatility of projectile motion.","title":"6. Family of Solutions and Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#analysis-of-the-range-dependence-on-angle-of-projection","text":"This section analyzes the horizontal range of a projectile as a function of the angle of projection, leveraging the equations derived previously. We determine the time of flight, investigate trigonometric dependencies, explore parameter effects, and identify critical angles, maintaining a theoretical focus without numerical computation.","title":"Analysis of the Range: Dependence on Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-expressing-the-horizontal-range","text":"The horizontal range \\(R\\) is the distance traveled along the x-axis when the projectile returns to a specified height (typically \\(y = 0\\) for level ground). From the position equations: $$ x(t) = v_0 \\cos\\theta \\, t, \\quad y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h, $$ \\(R\\) is \\(x(t)\\) evaluated at the time of flight \\(t_f\\) , when \\(y(t_f) = 0\\) . Thus: $$ R = x(t_f) = v_0 \\cos\\theta \\, t_f. $$ The expression for \\(t_f\\) is derived next.","title":"1. Expressing the Horizontal Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-determining-the-time-of-flight","text":"The time of flight \\(t_f\\) is the duration from launch to landing. Set \\(y(t) = 0\\) for a projectile launched from height \\(h\\) : $$ 0 = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h. $$ This is a quadratic equation in \\(t\\) : $$ -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h = 0. $$ Multiply through by \\(-2/g\\) to simplify: $$ t^2 - \\frac{2 v_0 \\sin\\theta}{g} t - \\frac{2 h}{g} = 0. $$ Solve using the quadratic formula \\(t = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\) , where \\(a = 1\\) , \\(b = -\\frac{2 v_0 \\sin\\theta}{g}\\) , \\(c = -\\frac{2 h}{g}\\) : $$ t = \\frac{\\frac{2 v_0 \\sin\\theta}{g} \\pm \\sqrt{\\left(\\frac{2 v_0 \\sin\\theta}{g}\\right)^2 - 4 \\cdot 1 \\cdot \\left(-\\frac{2 h}{g}\\right)}}{2}. $$ Simplify the discriminant: $$ \\Delta = \\left(\\frac{2 v_0 \\sin\\theta}{g}\\right)^2 + \\frac{8 h}{g} = \\frac{4 v_0^2 \\sin^2\\theta}{g^2} + \\frac{8 h}{g}. $$ Thus: $$ t = \\frac{\\frac{2 v_0 \\sin\\theta}{g} \\pm \\sqrt{\\frac{4 v_0^2 \\sin^2\\theta + 8 h g}{g^2}}}{2} = \\frac{v_0 \\sin\\theta \\pm \\sqrt{v_0^2 \\sin^2\\theta + 2 h g}}{g}. $$ For \\(h = 0\\) (level ground), this reduces to: $$ t_f = \\frac{2 v_0 \\sin\\theta}{g}, $$ selecting the positive root (time after launch). Substitute into the range: $$ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} = \\frac{2 v_0^2 \\sin\\theta \\cos\\theta}{g}. $$ Using the identity \\(2 \\sin\\theta \\cos\\theta = \\sin 2\\theta\\) : $$ R = \\frac{v_0^2 \\sin 2\\theta}{g}. $$","title":"2. Determining the Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-variation-with-angle-of-projection","text":"The range \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) depends on \\(\\sin 2\\theta\\) , which varies with \\(\\theta\\) : - At \\(\\theta = 0^\\circ\\) or \\(90^\\circ\\) , \\(\\sin 2\\theta = 0\\) , so \\(R = 0\\) (no horizontal travel). - The term \\(\\sin 2\\theta\\) oscillates between \\(-1\\) and \\(1\\) , with a maximum of \\(1\\) when \\(2\\theta = 90^\\circ\\) (i.e., \\(\\theta = 45^\\circ\\) ). - Symmetry exists: \\(\\sin 2(90^\\circ - \\theta) = \\sin (180^\\circ - 2\\theta) = \\sin 2\\theta\\) , so \\(R(\\theta) = R(90^\\circ - \\theta)\\) (e.g., \\(30^\\circ\\) and \\(60^\\circ\\) yield equal ranges). This trigonometric dependence indicates \\(R\\) peaks at an intermediate angle and decreases symmetrically around it.","title":"3. Variation with Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-effect-of-parameters","text":"Initial Velocity ( \\(v_0\\) ) : Since \\(R \\propto v_0^2\\) , doubling \\(v_0\\) quadruples \\(R\\) , amplifying the range for all angles. The shape of \\(R\\) vs. \\(\\theta\\) remains unchanged, but the amplitude scales. Gravitational Acceleration ( \\(g\\) ) : \\(R \\propto 1/g\\) , so increasing \\(g\\) (e.g., on a planet with stronger gravity) reduces \\(R\\) proportionally. The angle dependence persists, but the curve compresses vertically. Initial Height ( \\(h\\) ) : For \\(h > 0\\) , \\(t_f\\) increases (per the quadratic solution), extending \\(R\\) . The maximum range angle shifts below \\(45^\\circ\\) , as vertical flight time contributes more to horizontal distance.","title":"4. Effect of Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-key-angles","text":"Maximum Range Angle : For \\(h = 0\\) , \\(R\\) is maximized when \\(\\sin 2\\theta = 1\\) , i.e., \\(\\theta = 45^\\circ\\) , balancing horizontal and vertical components optimally. Complementary Angles : Pairs like \\(30^\\circ\\) and \\(60^\\circ\\) yield identical ranges due to \\(\\sin 2\\theta\\) symmetry. Effect of Height : When \\(h \\neq 0\\) , the optimal angle decreases, derivable by maximizing the full range expression (not computed here).","title":"5. Key Angles"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications-of-projectile-motion","text":"This section explores the relevance of projectile motion in real-world contexts, modifications to the idealized model, and the impact of simplifying assumptions. The equations \\(x(t) = v_0 \\cos\\theta \\, t\\) and \\(y(t) = -\\frac{1}{2} g t^2 + v_0 \\sin\\theta \\, t + h\\) with range \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) for \\(h = 0\\) serve as the foundation.","title":"Practical Applications of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-real-world-scenarios","text":"Projectile motion is crucial in: Sports : Basketball shots, soccer kicks, and golf drives follow parabolic paths influenced by \\(\\theta\\) and \\(v_0\\) . Military : Artillery shells' trajectories depend on \\(v_0\\) and \\(\\theta\\) , with terrain and wind affecting predictions. Space Exploration : Initial rocket phases resemble projectile motion, with \\(g\\) varying with altitude.","title":"1. Real-World Scenarios"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-modifications-for-uneven-terrain","text":"For uneven terrain, adjust the final height \\(y_f\\) : \\[ y_f = -\\frac{1}{2} g t_f^2 + v_0 \\sin\\theta \\, t_f + h. \\] Solve for \\(t_f\\) : $$ t_f = \\frac{v_0 \\sin\\theta \\pm \\sqrt{(v_0 \\sin\\theta)^2 - 2 g (h - y_f)}}{g}. $$ The range is: $$ R = v_0 \\cos\\theta \\, t_f. $$","title":"2. Modifications for Uneven Terrain"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-incorporating-air-resistance","text":"Air resistance, modeled as \\(F_d = -k v\\) or \\(F_d = -c v^2\\) , modifies the equations of motion: $$ \\frac{d^2 x}{dt^2} = -\\frac{c}{m} \\dot{x}, \\quad \\frac{d^2 y}{dt^2} = -g - \\frac{c}{m} \\dot{y}. $$ These require numerical methods for solutions, reducing range and altering trajectory shape.","title":"3. Incorporating Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-simplifying-assumptions-and-their-impact","text":"Assumptions like no drag, flat ground, constant \\(g\\) , and point mass simplify the model but limit accuracy. Real-world scenarios need adjustments for air resistance, terrain, varying \\(g\\) , and object rotation. These refinements ensure more accurate predictions beyond the idealized \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) .","title":"4. Simplifying Assumptions and Their Impact"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"The theoretical framework provides a rigorous foundation for analyzing projectile range as a function of the angle of projection, with dependencies on initial velocity \\(v_0\\) , angle \\(\\theta\\) , and initial height \\(h\\) . For \\(h = 0\\) , the range is expressed as \\(R = \\frac{v_0^2 \\sin 2\\theta}{g}\\) . Introducing a non-zero \\(h\\) extends flight time and shifts the optimal angle. This model applies to sports, military, and space exploration, but requires adaptations for real-world dynamics. Adjustments for uneven terrain, air resistance, and varying \\(g\\) enhance predictive accuracy. Computational simulations and visualizations clarify parametric effects and practical implications. These efforts underscore the versatility of projectile motion, providing a robust platform for theoretical and practical applications.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#codes-and-plots","text":"","title":"Codes and Plots"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-vs-angle-for-varying-initial-velocities","text":"import numpy as np import matplotlib.pyplot as plt # Constants v0 = 20.0 # Initial velocity (m/s) g = 9.81 # Gravitational acceleration (m/s^2) # Angle array (0 to 90 degrees, in radians) theta_deg = np.linspace(0, 90, 91) # Degrees theta = np.radians(theta_deg) # Radians # Range calculation: R = (v0^2 * sin(2*theta)) / g R = (v0**2 * np.sin(2 * theta)) / g # Plotting plt.figure(figsize=(8, 6)) plt.plot(theta_deg, R, label=f'$v_0 = {v0} \\, \\mathrm{{m/s}}$', color='blue') plt.xlabel('Angle of Projection ($\\\\theta$, degrees)') plt.ylabel('Range ($R$, meters)') plt.title('Range vs. Angle of Projection ($h = 0$)') plt.grid(True) plt.legend() plt.show()","title":"Range vs. Angle for Varying Initial Velocities"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-vs-angle-with-initial-height","text":"import numpy as np import matplotlib.pyplot as plt # Constants v0 = 20.0 # Initial velocity (m/s) g = 9.81 # Gravitational acceleration (m/s^2) h_values = [0, 10, 20] # Initial heights (m) # Angle array theta_deg = np.linspace(0, 90, 91) theta = np.radians(theta_deg) # Plotting plt.figure(figsize=(8, 6)) for h in h_values: # Time of flight: t = (v0*sin(theta) + sqrt((v0*sin(theta))^2 + 2gh)) / g t_f = (v0 * np.sin(theta) + np.sqrt((v0 * np.sin(theta))**2 + 2 * g * h)) / g R = v0 * np.cos(theta) * t_f plt.plot(theta_deg, R, label=f'$h = {h} \\, \\mathrm{{m}}$') plt.xlabel('Angle of Projection ($\\\\theta$, degrees)') plt.ylabel('Range ($R$, meters)') plt.title('Range vs. Angle for Different Initial Heights') plt.grid(True) plt.legend() plt.show()","title":"Range vs. Angle with Initial Height"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-demonstration","text":"","title":"Projectile Motion Demonstration"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#earth-g-981-ms2","text":"","title":"Earth (g = 9.81 m/s\u00b2)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#moon-g-162-ms2","text":"","title":"Moon (g = 1.62 m/s\u00b2)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#jupiter-g-2479-ms2","text":"","title":"Jupiter (g = 24.79 m/s\u00b2)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-comparison","text":"import numpy as np import matplotlib.pyplot as plt from matplotlib.animation import FuncAnimation from IPython.display import display, Image # Constants m = 1.0 # Mass (kg) v0 = 20.0 # Initial upward velocity (m/s) h0 = 0.0 # Initial height (m) # Gravitational accelerations (m/s^2) planets = { 'Earth': 9.81, # Earth 'Moon': 1.62, # Moon 'Jupiter': 24.79 # Jupiter } # Function to calculate position def height(t, v0, g, h0): return h0 + v0 * t - 0.5 * g * t**2 # Function to create and save animation as GIF def animate_projectile(planet, g): t_max = 2 * v0 / g t = np.linspace(0, t_max, 100) h = height(t, v0, g, h0) h = np.maximum(h, 0) fig, ax = plt.subplots(figsize=(6, 6)) ax.set_xlim([0, 1]) ax.set_ylim([0, 130]) # Fixed max height for comparison (Moon reaches ~123 m) ax.set_xlabel('Horizontal Distance (m)') ax.set_ylabel('Height (m)') ax.set_title(f'Projectile Motion on {planet} (g = {g} m/s\u00b2)') ax.grid(True) x_data = np.array([0.5]) ball, = ax.plot(x_data, [h[0]], 'ro', markersize=10, label='Object (1 kg)') ax.legend() def update(frame): ball.set_data(x_data, [h[frame]]) return ball, anim = FuncAnimation(fig, update, frames=range(len(t)), interval=50, repeat=True) gif_filename = f'{planet}_projectile.gif' anim.save(gif_filename, writer='pillow', fps=20) plt.close(fig) display(Image(filename=gif_filename)) # Static comparison plot def compare_trajectories(): fig, ax = plt.subplots(figsize=(10, 6)) ax.set_xlabel('Time (s)') ax.set_ylabel('Height (m)') ax.set_title('Projectile Motion Comparison: Earth, Moon, Jupiter') ax.grid(True) max_t = 2 * v0 / planets['Moon'] # Longest flight time (Moon) t = np.linspace(0, max_t, 200) for planet, g in planets.items(): h = height(t, v0, g, h0) h = np.maximum(h, 0) ax.plot(t, h, label=f'{planet} (g = {g} m/s\u00b2)') ax.set_ylim(0, 130) # Fixed scale to show Moon's max height ax.legend() plt.show() # Run animations for planet, g in planets.items(): animate_projectile(planet, g) # Show static comparison compare_trajectories()","title":"Projectile Motion Comparison"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#website-with-different-parameters","text":"ProjectileMotion","title":"Website with different parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#colab","text":"Colab","title":"Colab"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Theoretical Foundation of the Forced Damped Pendulum The forced damped pendulum combines damping, gravitational forces, and external periodic forcing. This section derives the governing differential equation, approximates solutions for small-angle oscillations, and analyzes resonance conditions. 1. Governing Differential Equation For a pendulum of length \\(l\\) and mass \\(m\\) , with gravitational acceleration \\(g\\) , damping coefficient \\(b\\) , and external force amplitude \\(F_0\\) , the angular displacement \\(\\theta(t)\\) follows: \\[ \\frac{d^2 \\theta}{dt^2} + \\frac{b}{m l} \\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = \\frac{F_0}{m l} \\cos(\\omega t). \\] Defining \\(\\omega_0 = \\sqrt{g/l}\\) and \\(\\gamma = b/(2m l)\\) , we get: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(f = F_0/(m l)\\) . 2. Small-Angle Approximation For small angles, \\(\\sin\\theta \\approx \\theta\\) , simplifying to: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = f \\cos(\\omega t). \\] The general solution is: \\[ \\theta(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)) + R \\cos(\\omega t - \\phi), \\] with \\(\\omega_d = \\sqrt{\\omega_0^2 - \\gamma^2}\\) , \\(R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}\\) , and \\(\\tan\\phi = \\frac{2\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\) . 3. Resonance Conditions Resonance occurs when \\(\\omega \\approx \\omega_0\\) , maximizing \\(R\\) . For weak damping ( \\(\\gamma \\ll \\omega_0\\) ), the resonant frequency is: \\[ \\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}. \\] The quality factor \\(Q = \\omega_0 / (2\\gamma)\\) indicates resonance sharpness. Nonlinear cases ( \\(\\sin\\theta \\neq \\theta\\) ) can lead to complex behaviors beyond small-angle approximations. Analysis of System Dynamics for the Forced Damped Pendulum This section explores how damping, driving amplitude, and frequency affect the pendulum\u2019s motion, transitioning from regular to chaotic behavior. 1. Influence of the Damping Coefficient The damping coefficient \\(b\\) introduces energy dissipation: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) . For small angles: \\[ \\theta_h(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)), \\] with \\(\\omega_d = \\sqrt{\\omega_0^2 - \\gamma^2}\\) . Higher \\(\\gamma\\) reduces the steady-state amplitude \\(R\\) : \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] Increasing \\(b\\) suppresses large oscillations and stabilizes the system. 2. Impact of Driving Amplitude The driving amplitude \\(f\\) determines energy input: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] For small \\(f\\) , the response is periodic. Large \\(f\\) can lead to rotational or chaotic motion, overcoming the potential barrier at \\(\\theta = \\pi\\) . 3. Effect of Driving Frequency The driving frequency \\(\\omega\\) affects the system\u2019s response: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] Near resonance ( \\(\\omega \\approx \\omega_0\\) ), amplitude peaks. For \\(\\omega \\ll \\omega_0\\) , the response is adiabatic; for \\(\\omega \\gg \\omega_0\\) , it diminishes. Varying \\(\\omega\\) can induce subharmonic or quasiperiodic motion. 4. Transition from Regular to Chaotic Motion Regular motion forms predictable trajectories in phase space. Chaos emerges with aperiodic trajectories and sensitivity to initial conditions. The Lyapunov exponent \\(\\lambda > 0\\) indicates chaos: \\[ \\frac{d^2 \\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\sin\\theta = A \\cos(\\omega t), \\] where \\(\\beta = 2\\gamma/\\omega_0\\) and \\(A = f/\\omega_0^2\\) . Chaos occurs for \\(A > A_c\\) (e.g., \\(A_c \\approx 1.1\\) for \\(\\beta = 0.5\\) , \\(\\omega = 0.67\\omega_0\\) ). 5. Physical Interpretation of Regular vs. Chaotic Motion Regular motion shows discrete peaks in the power spectrum, indicating predictable oscillations. Chaotic motion has a continuous spectrum, reflecting erratic swings and sensitivity to perturbations, common in complex systems. Practical Applications of the Forced Damped Pendulum Model The forced damped pendulum serves as a fundamental model for oscillatory systems under external influence, with applications spanning engineering, physics, and technology. This section identifies key real-world examples\u2014energy harvesting devices, suspension bridges, and oscillating circuits\u2014and elucidates how insights from the model can be applied, leveraging its dynamics governed by: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) represent damping, natural frequency, and forcing amplitude, respectively. 1. Real-World Examples Energy Harvesting Devices Energy harvesting devices convert ambient mechanical vibrations into electrical energy, often using piezoelectric or electromagnetic oscillators. These systems can be modeled as forced damped pendulums when subjected to periodic environmental forces (e.g., wind or machinery vibrations). The pendulum\u2019s response, particularly near resonance, is critical: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}, \\] where \\(R\\) is the steady-state amplitude for small angles ( \\(\\sin\\theta \\approx \\theta\\) ). Devices like vibration-powered sensors exemplify this, with \\(\\omega\\) matching ambient frequencies. Suspension Bridges Suspension bridges experience wind or traffic-induced oscillations, resembling a forced damped pendulum when cables or decks sway. The nonlinear term \\(\\omega_0^2 \\sin\\theta\\) captures large-amplitude effects, such as those observed in the Tacoma Narrows Bridge collapse. The equation\u2019s forcing term \\(f \\cos(\\omega t)\\) models periodic wind gusts, while damping \\(\\gamma\\) reflects structural energy dissipation. Oscillating Circuits In electrical engineering, driven RLC circuits (resistor-inductor-capacitor) are analogous to the forced damped pendulum. The circuit\u2019s differential equation: \\[ L \\frac{d^2 q}{dt^2} + R \\frac{dq}{dt} + \\frac{1}{C} q = V_0 \\cos(\\omega t), \\] mirrors the pendulum\u2019s, with charge \\(q\\) akin to \\(\\theta\\) , inductance \\(L\\) to mass, resistance \\(R\\) to damping \\(b\\) , and capacitance \\(1/C\\) to \\(\\omega_0^2\\) . Applications include radio tuners and signal filters, where external voltage \\(V_0 \\cos(\\omega t)\\) drives the system. 2. Application of Model Insights Energy Harvesting Devices The model\u2019s resonance behavior maximizes energy transfer when the driving frequency \\(\\omega\\) aligns with \\(\\omega_0\\) , adjusted for damping: \\[ \\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}. \\] Tuning \\(\\omega_0\\) (via pendulum length or mass) to match environmental frequencies enhances power output, calculated as \\(P = \\frac{1}{2} b (\\dot{\\theta})^2\\) in the mechanical domain, then converted electrically. Nonlinear effects ( \\(\\sin\\theta\\) ) inform designs for large-amplitude vibrations, preventing chaotic inefficiencies. Suspension Bridges Insights into resonance and damping guide bridge design. Excessive amplitude at \\(\\omega \\approx \\omega_0\\) risks structural failure, as \\(R\\) grows inversely with \\(\\gamma\\) . Engineers increase \\(\\gamma\\) (e.g., via dampers) to reduce \\(Q = \\omega_0/(2\\gamma)\\) , the quality factor, mitigating oscillations. The nonlinear transition to chaos warns of unpredictable large swings under strong forcing \\(f\\) , prompting aerodynamic adjustments or cable reinforcements. Oscillating Circuits The steady-state response \\(R\\) and phase \\(\\phi\\) : \\[ R = \\frac{V_0 / L}{\\sqrt{\\left(\\frac{1}{LC} - \\omega^2\\right)^2 + \\left(\\frac{R}{L} \\omega\\right)^2}}, \\quad \\tan\\phi = \\frac{R \\omega}{\\frac{1}{LC} - \\omega^2}, \\] inform circuit tuning. Resonance at \\(\\omega = 1/\\sqrt{LC}\\) amplifies signals in radios, while damping \\(R/L\\) controls bandwidth. Nonlinear analogs (e.g., with varactors) leverage chaotic dynamics for secure communication or signal processing, drawing from the pendulum\u2019s sensitivity to parameters. Conclusion The forced damped pendulum encapsulates a rich spectrum of physical behaviors, bridging theoretical nonlinear dynamics with practical engineering applications. The governing equation: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) , provides a foundation for understanding oscillatory systems under damping and external forcing. In the small-angle regime ( \\(\\sin\\theta \\approx \\theta\\) ), the solution: \\[ \\theta(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)) + R \\cos(\\omega t - \\phi), \\] with \\(R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}\\) , reveals resonance near \\(\\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}\\) , offering predictable energy amplification critical for applications like energy harvesting and circuit tuning. Analysis of system dynamics highlights the roles of damping \\(\\gamma\\) , driving amplitude \\(f\\) , and frequency \\(\\omega\\) . Higher \\(\\gamma\\) stabilizes motion by reducing \\(R\\) , while large \\(f\\) and specific \\(\\omega/\\omega_0\\) ratios can trigger transitions from regular, periodic trajectories to chaotic, aperiodic ones, marked by a positive Lyapunov exponent \\(\\lambda > 0\\) . This duality\u2014regular motion\u2019s predictability versus chaos\u2019s sensitivity\u2014underscores the system\u2019s complexity. Practically, the model informs energy harvesting by optimizing \\(\\omega_0\\) for resonance, enhances suspension bridge stability by tuning \\(\\gamma\\) to mitigate \\(Q = \\omega_0/(2\\gamma)\\) , and guides oscillating circuits via analogies to RLC dynamics, where \\(R = \\frac{V_0 / L}{\\sqrt{\\left(\\frac{1}{LC} - \\omega^2\\right)^2 + \\left(\\frac{R}{L} \\omega\\right)^2}}\\) . Nonlinear insights further address large-amplitude effects and chaotic potential, from preventing bridge collapse to enabling advanced signal processing. In sum, the forced damped pendulum exemplifies how fundamental physics principles\u2014linear resonance, nonlinear transitions, and parameter interplay\u2014translate into real-world solutions, advancing both theoretical understanding and technological innovation. Website with pendulum simulations Pendulum Simulator Basic Simulation and Motion Plot import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 # gravitational acceleration (m/s^2) l = 1.0 # pendulum length (m) omega0_sq = g / l # natural frequency squared t = np.linspace(0, 50, 10000) # time array # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # theta, theta_dot # Example cases plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) plt.subplot(2, 1, 1) plt.plot(t, theta1) plt.title(\"Motion: \u03b3=0.1, f=0.5, \u03c9=3.0 (Near Resonance)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"\u03b8 (rad)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) plt.subplot(2, 1, 2) plt.plot(t, theta2) plt.title(\"Motion: \u03b3=0.1, f=1.2, \u03c9=2.0 (Chaotic)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"\u03b8 (rad)\") plt.tight_layout() plt.show() Phase Portrait Generation import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 l = 1.0 omega0_sq = g / l t = np.linspace(0, 50, 10000) # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # Plot phase portraits plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) plt.subplot(1, 2, 1) plt.plot(theta1, theta_dot1, lw=0.5) plt.title(\"Phase Portrait: \u03b3=0.1, f=0.5, \u03c9=3.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) plt.subplot(1, 2, 2) plt.plot(theta2, theta_dot2, lw=0.5) plt.title(\"Phase Portrait: \u03b3=0.1, f=1.2, \u03c9=2.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") plt.tight_layout() plt.show() Poincar\u00e9 Section Generation import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 l = 1.0 omega0_sq = g / l t = np.linspace(0, 50, 10000) # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # Poincar\u00e9 section function def poincare_section(theta, theta_dot, t, omega): period = 2 * np.pi / omega indices = np.where(np.abs(t % period) < 0.01)[0] return theta[indices], theta_dot[indices] # Plot Poincar\u00e9 sections plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) p_theta1, p_theta_dot1 = poincare_section(theta1, theta_dot1, t, 3.0) plt.subplot(1, 2, 1) plt.scatter(p_theta1, p_theta_dot1, s=1) plt.title(\"Poincar\u00e9: \u03b3=0.1, f=0.5, \u03c9=3.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) p_theta2, p_theta_dot2 = poincare_section(theta2, theta_dot2, t, 2.0) plt.subplot(1, 2, 2) plt.scatter(p_theta2, p_theta_dot2, s=1) plt.title(\"Poincar\u00e9: \u03b3=0.1, f=1.2, \u03c9=2.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") plt.tight_layout() plt.show() Bifurcation Diagram Generation import numpy as np import matplotlib.pyplot as plt def logistic_map(r, x): return r * x * (1 - x) def bifurcation_diagram(r_min=2.5, r_max=4.0, num_r=10000, num_iter=1000, num_last=100): r_values = np.linspace(r_min, r_max, num_r) x = 0.5 * np.ones(num_r) plt.figure(figsize=(10, 6), dpi=100) for _ in range(num_iter): x = logistic_map(r_values, x) if _ >= (num_iter - num_last): plt.plot(r_values, x, ',k', alpha=0.25) plt.xlim(r_min, r_max) plt.ylim(0, 1) plt.xlabel(\"r\") plt.ylabel(\"x\") plt.title(\"Bifurcation Diagram of the Logistic Map\") plt.show() # Run the bifurcation diagram function bifurcation_diagram() Colab Colab","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theoretical-foundation-of-the-forced-damped-pendulum","text":"The forced damped pendulum combines damping, gravitational forces, and external periodic forcing. This section derives the governing differential equation, approximates solutions for small-angle oscillations, and analyzes resonance conditions.","title":"Theoretical Foundation of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-governing-differential-equation","text":"For a pendulum of length \\(l\\) and mass \\(m\\) , with gravitational acceleration \\(g\\) , damping coefficient \\(b\\) , and external force amplitude \\(F_0\\) , the angular displacement \\(\\theta(t)\\) follows: \\[ \\frac{d^2 \\theta}{dt^2} + \\frac{b}{m l} \\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = \\frac{F_0}{m l} \\cos(\\omega t). \\] Defining \\(\\omega_0 = \\sqrt{g/l}\\) and \\(\\gamma = b/(2m l)\\) , we get: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(f = F_0/(m l)\\) .","title":"1. Governing Differential Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-small-angle-approximation","text":"For small angles, \\(\\sin\\theta \\approx \\theta\\) , simplifying to: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = f \\cos(\\omega t). \\] The general solution is: \\[ \\theta(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)) + R \\cos(\\omega t - \\phi), \\] with \\(\\omega_d = \\sqrt{\\omega_0^2 - \\gamma^2}\\) , \\(R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}\\) , and \\(\\tan\\phi = \\frac{2\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\) .","title":"2. Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-resonance-conditions","text":"Resonance occurs when \\(\\omega \\approx \\omega_0\\) , maximizing \\(R\\) . For weak damping ( \\(\\gamma \\ll \\omega_0\\) ), the resonant frequency is: \\[ \\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}. \\] The quality factor \\(Q = \\omega_0 / (2\\gamma)\\) indicates resonance sharpness. Nonlinear cases ( \\(\\sin\\theta \\neq \\theta\\) ) can lead to complex behaviors beyond small-angle approximations.","title":"3. Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#analysis-of-system-dynamics-for-the-forced-damped-pendulum","text":"This section explores how damping, driving amplitude, and frequency affect the pendulum\u2019s motion, transitioning from regular to chaotic behavior.","title":"Analysis of System Dynamics for the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-influence-of-the-damping-coefficient","text":"The damping coefficient \\(b\\) introduces energy dissipation: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) . For small angles: \\[ \\theta_h(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)), \\] with \\(\\omega_d = \\sqrt{\\omega_0^2 - \\gamma^2}\\) . Higher \\(\\gamma\\) reduces the steady-state amplitude \\(R\\) : \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] Increasing \\(b\\) suppresses large oscillations and stabilizes the system.","title":"1. Influence of the Damping Coefficient"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-impact-of-driving-amplitude","text":"The driving amplitude \\(f\\) determines energy input: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] For small \\(f\\) , the response is periodic. Large \\(f\\) can lead to rotational or chaotic motion, overcoming the potential barrier at \\(\\theta = \\pi\\) .","title":"2. Impact of Driving Amplitude"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-effect-of-driving-frequency","text":"The driving frequency \\(\\omega\\) affects the system\u2019s response: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}. \\] Near resonance ( \\(\\omega \\approx \\omega_0\\) ), amplitude peaks. For \\(\\omega \\ll \\omega_0\\) , the response is adiabatic; for \\(\\omega \\gg \\omega_0\\) , it diminishes. Varying \\(\\omega\\) can induce subharmonic or quasiperiodic motion.","title":"3. Effect of Driving Frequency"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-transition-from-regular-to-chaotic-motion","text":"Regular motion forms predictable trajectories in phase space. Chaos emerges with aperiodic trajectories and sensitivity to initial conditions. The Lyapunov exponent \\(\\lambda > 0\\) indicates chaos: \\[ \\frac{d^2 \\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\sin\\theta = A \\cos(\\omega t), \\] where \\(\\beta = 2\\gamma/\\omega_0\\) and \\(A = f/\\omega_0^2\\) . Chaos occurs for \\(A > A_c\\) (e.g., \\(A_c \\approx 1.1\\) for \\(\\beta = 0.5\\) , \\(\\omega = 0.67\\omega_0\\) ).","title":"4. Transition from Regular to Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-physical-interpretation-of-regular-vs-chaotic-motion","text":"Regular motion shows discrete peaks in the power spectrum, indicating predictable oscillations. Chaotic motion has a continuous spectrum, reflecting erratic swings and sensitivity to perturbations, common in complex systems.","title":"5. Physical Interpretation of Regular vs. Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#practical-applications-of-the-forced-damped-pendulum-model","text":"The forced damped pendulum serves as a fundamental model for oscillatory systems under external influence, with applications spanning engineering, physics, and technology. This section identifies key real-world examples\u2014energy harvesting devices, suspension bridges, and oscillating circuits\u2014and elucidates how insights from the model can be applied, leveraging its dynamics governed by: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) represent damping, natural frequency, and forcing amplitude, respectively.","title":"Practical Applications of the Forced Damped Pendulum Model"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-real-world-examples","text":"","title":"1. Real-World Examples"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#energy-harvesting-devices","text":"Energy harvesting devices convert ambient mechanical vibrations into electrical energy, often using piezoelectric or electromagnetic oscillators. These systems can be modeled as forced damped pendulums when subjected to periodic environmental forces (e.g., wind or machinery vibrations). The pendulum\u2019s response, particularly near resonance, is critical: \\[ R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}, \\] where \\(R\\) is the steady-state amplitude for small angles ( \\(\\sin\\theta \\approx \\theta\\) ). Devices like vibration-powered sensors exemplify this, with \\(\\omega\\) matching ambient frequencies.","title":"Energy Harvesting Devices"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#suspension-bridges","text":"Suspension bridges experience wind or traffic-induced oscillations, resembling a forced damped pendulum when cables or decks sway. The nonlinear term \\(\\omega_0^2 \\sin\\theta\\) captures large-amplitude effects, such as those observed in the Tacoma Narrows Bridge collapse. The equation\u2019s forcing term \\(f \\cos(\\omega t)\\) models periodic wind gusts, while damping \\(\\gamma\\) reflects structural energy dissipation.","title":"Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#oscillating-circuits","text":"In electrical engineering, driven RLC circuits (resistor-inductor-capacitor) are analogous to the forced damped pendulum. The circuit\u2019s differential equation: \\[ L \\frac{d^2 q}{dt^2} + R \\frac{dq}{dt} + \\frac{1}{C} q = V_0 \\cos(\\omega t), \\] mirrors the pendulum\u2019s, with charge \\(q\\) akin to \\(\\theta\\) , inductance \\(L\\) to mass, resistance \\(R\\) to damping \\(b\\) , and capacitance \\(1/C\\) to \\(\\omega_0^2\\) . Applications include radio tuners and signal filters, where external voltage \\(V_0 \\cos(\\omega t)\\) drives the system.","title":"Oscillating Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-application-of-model-insights","text":"","title":"2. Application of Model Insights"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#energy-harvesting-devices_1","text":"The model\u2019s resonance behavior maximizes energy transfer when the driving frequency \\(\\omega\\) aligns with \\(\\omega_0\\) , adjusted for damping: \\[ \\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}. \\] Tuning \\(\\omega_0\\) (via pendulum length or mass) to match environmental frequencies enhances power output, calculated as \\(P = \\frac{1}{2} b (\\dot{\\theta})^2\\) in the mechanical domain, then converted electrically. Nonlinear effects ( \\(\\sin\\theta\\) ) inform designs for large-amplitude vibrations, preventing chaotic inefficiencies.","title":"Energy Harvesting Devices"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#suspension-bridges_1","text":"Insights into resonance and damping guide bridge design. Excessive amplitude at \\(\\omega \\approx \\omega_0\\) risks structural failure, as \\(R\\) grows inversely with \\(\\gamma\\) . Engineers increase \\(\\gamma\\) (e.g., via dampers) to reduce \\(Q = \\omega_0/(2\\gamma)\\) , the quality factor, mitigating oscillations. The nonlinear transition to chaos warns of unpredictable large swings under strong forcing \\(f\\) , prompting aerodynamic adjustments or cable reinforcements.","title":"Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#oscillating-circuits_1","text":"The steady-state response \\(R\\) and phase \\(\\phi\\) : \\[ R = \\frac{V_0 / L}{\\sqrt{\\left(\\frac{1}{LC} - \\omega^2\\right)^2 + \\left(\\frac{R}{L} \\omega\\right)^2}}, \\quad \\tan\\phi = \\frac{R \\omega}{\\frac{1}{LC} - \\omega^2}, \\] inform circuit tuning. Resonance at \\(\\omega = 1/\\sqrt{LC}\\) amplifies signals in radios, while damping \\(R/L\\) controls bandwidth. Nonlinear analogs (e.g., with varactors) leverage chaotic dynamics for secure communication or signal processing, drawing from the pendulum\u2019s sensitivity to parameters.","title":"Oscillating Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#conclusion","text":"The forced damped pendulum encapsulates a rich spectrum of physical behaviors, bridging theoretical nonlinear dynamics with practical engineering applications. The governing equation: \\[ \\frac{d^2 \\theta}{dt^2} + 2\\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = f \\cos(\\omega t), \\] where \\(\\gamma = b/(2m l)\\) , \\(\\omega_0 = \\sqrt{g/l}\\) , and \\(f = F_0/(m l)\\) , provides a foundation for understanding oscillatory systems under damping and external forcing. In the small-angle regime ( \\(\\sin\\theta \\approx \\theta\\) ), the solution: \\[ \\theta(t) = e^{-\\gamma t} (A \\cos(\\omega_d t) + B \\sin(\\omega_d t)) + R \\cos(\\omega t - \\phi), \\] with \\(R = \\frac{f}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2\\gamma \\omega)^2}}\\) , reveals resonance near \\(\\omega_r \\approx \\sqrt{\\omega_0^2 - 2\\gamma^2}\\) , offering predictable energy amplification critical for applications like energy harvesting and circuit tuning. Analysis of system dynamics highlights the roles of damping \\(\\gamma\\) , driving amplitude \\(f\\) , and frequency \\(\\omega\\) . Higher \\(\\gamma\\) stabilizes motion by reducing \\(R\\) , while large \\(f\\) and specific \\(\\omega/\\omega_0\\) ratios can trigger transitions from regular, periodic trajectories to chaotic, aperiodic ones, marked by a positive Lyapunov exponent \\(\\lambda > 0\\) . This duality\u2014regular motion\u2019s predictability versus chaos\u2019s sensitivity\u2014underscores the system\u2019s complexity. Practically, the model informs energy harvesting by optimizing \\(\\omega_0\\) for resonance, enhances suspension bridge stability by tuning \\(\\gamma\\) to mitigate \\(Q = \\omega_0/(2\\gamma)\\) , and guides oscillating circuits via analogies to RLC dynamics, where \\(R = \\frac{V_0 / L}{\\sqrt{\\left(\\frac{1}{LC} - \\omega^2\\right)^2 + \\left(\\frac{R}{L} \\omega\\right)^2}}\\) . Nonlinear insights further address large-amplitude effects and chaotic potential, from preventing bridge collapse to enabling advanced signal processing. In sum, the forced damped pendulum exemplifies how fundamental physics principles\u2014linear resonance, nonlinear transitions, and parameter interplay\u2014translate into real-world solutions, advancing both theoretical understanding and technological innovation.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#website-with-pendulum-simulations","text":"Pendulum Simulator","title":"Website with pendulum simulations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#basic-simulation-and-motion-plot","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 # gravitational acceleration (m/s^2) l = 1.0 # pendulum length (m) omega0_sq = g / l # natural frequency squared t = np.linspace(0, 50, 10000) # time array # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # theta, theta_dot # Example cases plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) plt.subplot(2, 1, 1) plt.plot(t, theta1) plt.title(\"Motion: \u03b3=0.1, f=0.5, \u03c9=3.0 (Near Resonance)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"\u03b8 (rad)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) plt.subplot(2, 1, 2) plt.plot(t, theta2) plt.title(\"Motion: \u03b3=0.1, f=1.2, \u03c9=2.0 (Chaotic)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"\u03b8 (rad)\") plt.tight_layout() plt.show()","title":"Basic Simulation and Motion Plot"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-portrait-generation","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 l = 1.0 omega0_sq = g / l t = np.linspace(0, 50, 10000) # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # Plot phase portraits plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) plt.subplot(1, 2, 1) plt.plot(theta1, theta_dot1, lw=0.5) plt.title(\"Phase Portrait: \u03b3=0.1, f=0.5, \u03c9=3.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) plt.subplot(1, 2, 2) plt.plot(theta2, theta_dot2, lw=0.5) plt.title(\"Phase Portrait: \u03b3=0.1, f=1.2, \u03c9=2.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") plt.tight_layout() plt.show()","title":"Phase Portrait Generation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section-generation","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import odeint # Define the pendulum ODE def pendulum_deriv(state, t, gamma, omega0_sq, f, omega): theta, theta_dot = state dtheta_dt = theta_dot dtheta_dot_dt = -2 * gamma * theta_dot - omega0_sq * np.sin(theta) + f * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Parameters g = 9.81 l = 1.0 omega0_sq = g / l t = np.linspace(0, 50, 10000) # Simulation function def simulate_pendulum(gamma, f, omega, theta0=0.2, theta_dot0=0.0): state0 = [theta0, theta_dot0] sol = odeint(pendulum_deriv, state0, t, args=(gamma, omega0_sq, f, omega)) return sol[:, 0], sol[:, 1] # Poincar\u00e9 section function def poincare_section(theta, theta_dot, t, omega): period = 2 * np.pi / omega indices = np.where(np.abs(t % period) < 0.01)[0] return theta[indices], theta_dot[indices] # Plot Poincar\u00e9 sections plt.figure(figsize=(10, 6)) # Case 1: Low damping, near resonance theta1, theta_dot1 = simulate_pendulum(gamma=0.1, f=0.5, omega=3.0) p_theta1, p_theta_dot1 = poincare_section(theta1, theta_dot1, t, 3.0) plt.subplot(1, 2, 1) plt.scatter(p_theta1, p_theta_dot1, s=1) plt.title(\"Poincar\u00e9: \u03b3=0.1, f=0.5, \u03c9=3.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") # Case 2: High amplitude, chaotic theta2, theta_dot2 = simulate_pendulum(gamma=0.1, f=1.2, omega=2.0) p_theta2, p_theta_dot2 = poincare_section(theta2, theta_dot2, t, 2.0) plt.subplot(1, 2, 2) plt.scatter(p_theta2, p_theta_dot2, s=1) plt.title(\"Poincar\u00e9: \u03b3=0.1, f=1.2, \u03c9=2.0\") plt.xlabel(\"\u03b8 (rad)\") plt.ylabel(\"d\u03b8/dt (rad/s)\") plt.tight_layout() plt.show()","title":"Poincar\u00e9 Section Generation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#bifurcation-diagram-generation","text":"import numpy as np import matplotlib.pyplot as plt def logistic_map(r, x): return r * x * (1 - x) def bifurcation_diagram(r_min=2.5, r_max=4.0, num_r=10000, num_iter=1000, num_last=100): r_values = np.linspace(r_min, r_max, num_r) x = 0.5 * np.ones(num_r) plt.figure(figsize=(10, 6), dpi=100) for _ in range(num_iter): x = logistic_map(r_values, x) if _ >= (num_iter - num_last): plt.plot(r_values, x, ',k', alpha=0.25) plt.xlim(r_min, r_max) plt.ylim(0, 1) plt.xlabel(\"r\") plt.ylabel(\"x\") plt.title(\"Bifurcation Diagram of the Logistic Map\") plt.show() # Run the bifurcation diagram function bifurcation_diagram()","title":"Bifurcation Diagram Generation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#colab","text":"Colab","title":"Colab"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Derivation of the Relationship Between Orbital Period and Orbital Radius The following notes derive the relationship between the square of the orbital period ( \\(T^2\\) ) and the cube of the orbital radius ( \\(r^3\\) ) for an object in a circular orbit, culminating in a form consistent with Kepler's Third Law. This derivation integrates Newton\u2019s law of universal gravitation with the dynamics of circular motion, providing a foundational result in celestial mechanics. 1. Newton\u2019s Law of Gravitation Newton\u2019s law of gravitation describes the attractive force between two masses. For a satellite of mass \\(m\\) orbiting a central body of mass \\(M\\) (where \\(M \\gg m\\) ), the gravitational force \\(F_g\\) is given by: \\[ F_g = \\frac{G M m}{r^2} \\] where: - \\(G\\) is the gravitational constant ( \\(G \\approx 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ), - \\(M\\) is the mass of the central body, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius (distance between the centers of the two masses). This force acts as the centripetal force required to maintain the satellite in a circular orbit. 2. Centripetal Force for Circular Motion For an object in uniform circular motion, the centripetal force \\(F_c\\) is necessary to keep it moving along a circular path. The expression for centripetal force is: \\[ F_c = \\frac{m v^2}{r} \\] where: - \\(v\\) is the orbital velocity of the satellite, - \\(m\\) is the mass of the satellite, - \\(r\\) is the radius of the circular orbit. The orbital velocity \\(v\\) can be related to the orbital period \\(T\\) , the time for one complete revolution. The circumference of the orbit is \\(2\\pi r\\) , so: \\[ v = \\frac{2\\pi r}{T} \\] Squaring this velocity: \\[ v^2 = \\left( \\frac{2\\pi r}{T} \\right)^2 = \\frac{4\\pi^2 r^2}{T^2} \\] Substituting \\(v^2\\) into the centripetal force equation: \\[ F_c = \\frac{m}{r} \\cdot \\frac{4\\pi^2 r^2}{T^2} = \\frac{4\\pi^2 m r}{T^2} \\] 3. Equating Gravitational and Centripetal Forces In a stable circular orbit, the gravitational force provides the necessary centripetal force. Thus, we set \\(F_g = F_c\\) : \\[ \\frac{G M m}{r^2} = \\frac{4\\pi^2 m r}{T^2} \\] The mass of the satellite \\(m\\) appears on both sides and, assuming \\(m \\neq 0\\) , can be canceled: \\[ \\frac{G M}{r^2} = \\frac{4\\pi^2 r}{T^2} \\] 4. Solving for the Orbital Period-Radius Relationship To isolate the relationship between \\(T\\) and \\(r\\) , rearrange the equation. Multiply both sides by \\(T^2\\) : \\[ G M T^2 = 4\\pi^2 r^3 \\] Now, divide through by \\(G M\\) : \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This equation reveals that the square of the orbital period \\(T^2\\) is directly proportional to the cube of the orbital radius \\(r^3\\) . The constant of proportionality, \\(\\frac{4\\pi^2}{G M}\\) , depends only on the mass of the central body \\(M\\) and universal constants. 5. Consistency with Kepler\u2019s Third Law Kepler\u2019s Third Law, originally empirical, states that for planets orbiting the Sun, the ratio \\(T^2 / r^3\\) is constant. In Newtonian terms, we rewrite: \\[ T^2 = k r^3 \\] where \\(k = \\frac{4\\pi^2}{G M}\\) is constant for all bodies orbiting the same central mass \\(M\\) . This confirms that our derivation aligns with Kepler\u2019s Third Law for circular orbits. For a given system (e.g., the Solar System), \\(M\\) is the mass of the Sun, and \\(k\\) is identical for all planets assuming circular orbits. To express this in a more familiar form, take the ratio for two orbiting bodies (e.g., planets 1 and 2): \\[ \\frac{T_1^2}{r_1^3} = \\frac{T_2^2}{r_2^3} \\] This dimensionless form emphasizes the universality of the relationship across a single gravitational system. Implications of the Orbital Period-Radius Relationship in Astronomy The relationship \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) , derived from Newtonian mechanics, underpins critical astronomical applications. This section explores how it enables the determination of central body masses, facilitates distance measurements between celestial bodies, and enhances our understanding of gravitational interactions in planetary systems and satellite orbits. 1. Calculating the Mass of a Central Body The derived relationship allows astronomers to infer the mass of a central body \\(M\\) (e.g., a star or planet) when the orbital period \\(T\\) and radius \\(r\\) of a satellite or orbiting body are measurable. Rearranging the equation for \\(M\\) : \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] Here, \\(G\\) is the gravitational constant ( \\(G \\approx 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ), \\(r\\) is the orbital radius, and \\(T\\) is the orbital period. For example, consider Earth\u2019s Moon: with \\(T \\approx 27.32 \\, \\text{days}\\) (converted to seconds, \\(T \\approx 2.36 \\times 10^6 \\, \\text{s}\\) ) and \\(r \\approx 3.84 \\times 10^8 \\, \\text{m}\\) , astronomers can compute Earth\u2019s mass \\(M\\) . This method is widely applied beyond the Solar System. For a binary star system, if one star\u2019s orbit has a measured period \\(T_1\\) and semi-major axis \\(r_1\\) (approximated as \\(r\\) for circular orbits), the total system mass can be estimated, assuming the companion\u2019s contribution is accounted for via the center-of-mass relation. 2. Determining Distances Between Celestial Bodies The \\(T^2 \\propto r^3\\) relationship also aids in measuring distances between celestial bodies, such as planets or moons, when paired with observational data. If \\(M\\) is known (e.g., the Sun\u2019s mass, \\(M_\\odot \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) ), and \\(T\\) is observed (e.g., via transit timing or Doppler shifts), the orbital radius \\(r\\) can be solved: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] For instance, knowing Earth\u2019s orbital period around the Sun ( \\(T \\approx 365.25 \\, \\text{days} \\approx 3.156 \\times 10^7 \\, \\text{s}\\) ), astronomers calculate its mean distance \\(r \\approx 1.496 \\times 10^{11} \\, \\text{m}\\) (1 AU). This technique extends to exoplanets: if an exoplanet\u2019s period is detected via light curve dips, its distance from its host star can be inferred, assuming the star\u2019s mass is estimated from stellar models. For moons, the method refines distances from their planets. The Moon\u2019s \\(r\\) was historically constrained using its period and Earth\u2019s mass, validated by modern laser ranging. 3. Significance in Understanding Gravitational Interactions The relationship illuminates gravitational dynamics across scales. In planetary systems, it governs stability: perturbations in \\(r\\) or \\(T\\) signal additional masses (e.g., undiscovered planets) via deviations from the expected \\(T^2/r^3\\) ratio. For the Solar System, Kepler\u2019s Third Law holds approximately for planets, with slight elliptical corrections: \\[ \\frac{T^2}{r^3} \\approx \\text{constant} = \\frac{4\\pi^2}{G M_\\odot} \\] For satellite orbits, the equation informs design. Geostationary satellites, with \\(T = 24 \\, \\text{hours} \\approx 86,400 \\, \\text{s}\\) , orbit at \\(r \\approx 42,164 \\, \\text{km}\\) from Earth\u2019s center, derived from: \\[ r = \\left( \\frac{G M_\\oplus T^2}{4\\pi^2} \\right)^{1/3} \\] where \\(M_\\oplus \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) . This precision ensures communication satellites maintain fixed positions relative to Earth. Moreover, the law\u2019s universality\u2014applicable to moons, planets, and artificial satellites\u2014underscores gravity\u2019s consistent role. In multi-body systems, deviations from the ideal \\(T^2 \\propto r^3\\) form reveal tidal effects or companion influences, as seen in Jupiter\u2019s Galilean moons. Analysis of Real-World Examples: Orbital Period and Radius Kepler\u2019s Third Law, expressed as \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) for circular orbits, implies that the ratio \\(T^2/r^3\\) is constant for objects orbiting the same central body. This section collects orbital data for the Moon around Earth and for Earth and Mars around the Sun, then compares these to demonstrate the law\u2019s consistency across systems. 1. Data Collection: Moon\u2019s Orbit Around Earth The Moon orbits Earth with the following approximate parameters: - Orbital Period ( \\(T\\) ) : The sidereal period is \\(27.322\\) days, or \\(T_m = 27.322 \\times 86,400 = 2.36 \\times 10^6 \\, \\text{s}\\) (converting days to seconds). - Orbital Radius ( \\(r\\) ) : The average distance is \\(r_m = 3.844 \\times 10^8 \\, \\text{m}\\) , based on lunar ranging data. Calculate \\(T_m^2\\) and \\(r_m^3\\) : - \\(T_m^2 = (2.36 \\times 10^6)^2 = 5.57 \\times 10^{12} \\, \\text{s}^2\\) , - \\(r_m^3 = (3.844 \\times 10^8)^3 = 5.67 \\times 10^{25} \\, \\text{m}^3\\) . Thus, the ratio: $$ \\frac{T_m^2}{r_m^3} = \\frac{5.57 \\times 10^{12}}{5.67 \\times 10^{25}} \\approx 9.82 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}. $$ This depends on Earth\u2019s mass \\(M_\\oplus\\) via $ \\frac{4\\pi^2}{G M_\\oplus} $, where \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) and \\(M_\\oplus \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) . 2. Data Collection: Planetary Orbits Around the Sun Earth\u2019s Orbit Orbital Period ( \\(T\\) ) : Earth\u2019s sidereal year is \\(365.256\\) days, or \\(T_e = 365.256 \\times 86,400 = 3.156 \\times 10^7 \\, \\text{s}\\) . Orbital Radius ( \\(r\\) ) : The average distance (1 AU) is \\(r_e = 1.496 \\times 10^{11} \\, \\text{m}\\) . Calculate: - \\(T_e^2 = (3.156 \\times 10^7)^2 = 9.96 \\times 10^{14} \\, \\text{s}^2\\) , - \\(r_e^3 = (1.496 \\times 10^{11})^3 = 3.34 \\times 10^{33} \\, \\text{m}^3\\) . Ratio: $$ \\frac{T_e^2}{r_e^3} = \\frac{9.96 \\times 10^{14}}{3.34 \\times 10^{33}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}. $$ Mars\u2019 Orbit Orbital Period ( \\(T\\) ) : Mars\u2019 sidereal year is \\(686.98\\) days, or \\(T_{ma} = 686.98 \\times 86,400 = 5.936 \\times 10^7 \\, \\text{s}\\) . Orbital Radius ( \\(r\\) ) : The average distance is \\(r_{ma} = 2.279 \\times 10^{11} \\, \\text{m}\\) (1.524 AU). Calculate: - \\(T_{ma}^2 = (5.936 \\times 10^7)^2 = 3.52 \\times 10^{15} \\, \\text{s}^2\\) , - \\(r_{ma}^3 = (2.279 \\times 10^{11})^3 = 1.18 \\times 10^{34} \\, \\text{m}^3\\) . Ratio: $$ \\frac{T_{ma}^2}{r_{ma}^3} = \\frac{3.52 \\times 10^{15}}{1.18 \\times 10^{34}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}. $$ 3. Comparison and Verification Moon vs. Earth/Mars The \\(T^2/r^3\\) ratio for the Moon ( \\(9.82 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}\\) ) differs from Earth and Mars ( \\(2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}\\) ) because the central masses differ: Earth ( \\(M_\\oplus\\) ) for the Moon, and the Sun ( \\(M_\\odot \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) ) for the planets. Compute the theoretical constants: - For the Moon: $$ \\frac{4\\pi^2}{G M_\\oplus} = \\frac{4\\pi^2}{6.67430 \\times 10^{-11} \\times 5.972 \\times 10^{24}} \\approx 9.90 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}, $$ which matches \\(9.82 \\times 10^{-14}\\) within observational error. - For Earth and Mars: $$ \\frac{4\\pi^2}{G M_\\odot} = \\frac{4\\pi^2}{6.67430 \\times 10^{-11} \\times 1.989 \\times 10^{30}} \\approx 2.97 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}, $$ closely aligning with \\(2.98 \\times 10^{-19}\\) . Earth vs. Mars For Earth and Mars, orbiting the same body (Sun), the ratios are nearly identical ( \\(2.98 \\times 10^{-19}\\) ), confirming Kepler\u2019s Third Law: $$ \\frac{T_e^2}{r_e^3} = \\frac{T_{ma}^2}{r_{ma}^3}. $$ This holds despite Mars\u2019 higher eccentricity (0.093 vs. Earth\u2019s 0.017), as \\(r\\) approximates the semi-major axis. Conclusion The relationship \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) , derived from gravitational and circular motion dynamics, is a cornerstone of celestial mechanics. It links a central mass \\(M\\) , orbital radius \\(r\\) , and period \\(T\\) , enabling calculations of orbital periods, radii, and central body masses. Its applications range from the Solar System to exoplanetary studies, where it aids in characterizing distant worlds. Observational data confirm its consistency: the \\(T^2/r^3\\) ratio reflects the central mass, with the Moon\u2019s ratio tied to Earth\u2019s mass ( \\(M_\\oplus\\) ) and Earth and Mars sharing a ratio linked to the Sun\u2019s mass ( \\(M_\\odot\\) ). This universality validates Kepler\u2019s Third Law for circular orbits, with theoretical values aligning closely with empirical results. Beyond practical uses, this relationship underscores Newtonian gravity\u2019s predictive power, bridging local and cosmic scales. It also serves as a foundation for exploring elliptical orbits and broader celestial dynamics. Visualizations Website with orbit simulation Orbit Simulation Kepler Third Law (log scale) import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 M = 1.989e30 # Orbital radii in meters (planets in the Solar System, in AU converted to meters) au_to_m = 1.496e11 planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"] radii_au = np.array([0.39, 0.72, 1.0, 1.52, 5.2, 9.58, 19.2, 30.1]) radii = radii_au * au_to_m # Convert to meters periods = np.sqrt(4 * np.pi**2 * radii**3 / (G * M)) # Kepler's Third Law # Compute log values to make them more readable log_r3 = np.log10(radii**3) log_T2 = np.log10(periods**2) # Plot T^2 vs. r^3 using log-log scale plt.figure(figsize=(8, 6)) plt.scatter(log_r3, log_T2, color='b', label=r'$T^2 \\propto r^3$') # Add planet labels with adjusted positions to avoid overlap for i, planet in enumerate(planets): plt.text(log_r3[i], log_T2[i] + 0.1, planet, fontsize=10, ha='center', va='bottom') plt.xlabel(r\"$\\log_{10}(r^3) \\, (m^3)$\") plt.ylabel(r\"$\\log_{10}(T^2) \\, (s^2)$\") plt.title(\"Kepler's Third Law: $T^2$ vs. $r^3$ (Log Scale)\") plt.legend() plt.grid(True, which=\"both\", linestyle=\"--\", linewidth=0.5) plt.show() Planetary Orbit Animation import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation from IPython.display import HTML # Constants G = 6.67430e-11 # Gravitational constant M = 1.989e30 # Mass of the Sun (kg) AU = 1.496e11 # Astronomical unit (m) # Define a planet's orbit r = 1.0 * AU # 1 AU T = np.sqrt(4 * np.pi**2 * r**3 / (G * M)) # Orbital period # Time values num_frames = 200 # Number of frames for smooth animation t = np.linspace(0, T, num_frames) theta = 2 * np.pi * t / T # Orbital positions x = r * np.cos(theta) y = r * np.sin(theta) # Create figure fig, ax = plt.subplots(figsize=(6,6)) ax.set_xlim(-1.2 * AU, 1.2 * AU) ax.set_ylim(-1.2 * AU, 1.2 * AU) ax.set_xlabel(\"X Position (m)\") ax.set_ylabel(\"Y Position (m)\") ax.set_title(\"Planetary Orbit Animation\") ax.grid() # Plot Sun ax.plot(0, 0, 'yo', markersize=12, label=\"Sun\") # Planet marker planet, = ax.plot([], [], 'bo', markersize=8, label=\"Planet\") # Animation function def update(frame): planet.set_data([x[frame]], [y[frame]]) # Ensure data is passed as a sequence return planet, # Create animation ani = animation.FuncAnimation(fig, update, frames=num_frames, interval=50, blit=True) # Save as GIF ani.save(\"/content/orbit_animation.gif\", writer=\"pillow\", fps=20) # Display in Colab HTML(ani.to_jshtml()) Gravitational Potential Heatmap import numpy as np import matplotlib.pyplot as plt # Define grid x = np.linspace(-2e11, 2e11, 100) y = np.linspace(-2e11, 2e11, 100) X, Y = np.meshgrid(x, y) # Compute gravitational potential (V = -GM/r) G = 6.67430e-11 M = 1.989e30 R = np.sqrt(X**2 + Y**2) V = -G * M / (R + 1e7) # Avoid division by zero # Plot heatmap plt.figure(figsize=(6, 6)) plt.contourf(X, Y, V, levels=50, cmap='inferno') plt.colorbar(label=\"Gravitational Potential (J/kg)\") plt.scatter(0, 0, color='yellow', s=100, label=\"Sun\") plt.xlabel(\"x (m)\") plt.ylabel(\"y (m)\") plt.title(\"Gravitational Potential Heatmap\") plt.legend() plt.show() Colab Colab","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#derivation-of-the-relationship-between-orbital-period-and-orbital-radius","text":"The following notes derive the relationship between the square of the orbital period ( \\(T^2\\) ) and the cube of the orbital radius ( \\(r^3\\) ) for an object in a circular orbit, culminating in a form consistent with Kepler's Third Law. This derivation integrates Newton\u2019s law of universal gravitation with the dynamics of circular motion, providing a foundational result in celestial mechanics.","title":"Derivation of the Relationship Between Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-newtons-law-of-gravitation","text":"Newton\u2019s law of gravitation describes the attractive force between two masses. For a satellite of mass \\(m\\) orbiting a central body of mass \\(M\\) (where \\(M \\gg m\\) ), the gravitational force \\(F_g\\) is given by: \\[ F_g = \\frac{G M m}{r^2} \\] where: - \\(G\\) is the gravitational constant ( \\(G \\approx 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ), - \\(M\\) is the mass of the central body, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius (distance between the centers of the two masses). This force acts as the centripetal force required to maintain the satellite in a circular orbit.","title":"1. Newton\u2019s Law of Gravitation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-centripetal-force-for-circular-motion","text":"For an object in uniform circular motion, the centripetal force \\(F_c\\) is necessary to keep it moving along a circular path. The expression for centripetal force is: \\[ F_c = \\frac{m v^2}{r} \\] where: - \\(v\\) is the orbital velocity of the satellite, - \\(m\\) is the mass of the satellite, - \\(r\\) is the radius of the circular orbit. The orbital velocity \\(v\\) can be related to the orbital period \\(T\\) , the time for one complete revolution. The circumference of the orbit is \\(2\\pi r\\) , so: \\[ v = \\frac{2\\pi r}{T} \\] Squaring this velocity: \\[ v^2 = \\left( \\frac{2\\pi r}{T} \\right)^2 = \\frac{4\\pi^2 r^2}{T^2} \\] Substituting \\(v^2\\) into the centripetal force equation: \\[ F_c = \\frac{m}{r} \\cdot \\frac{4\\pi^2 r^2}{T^2} = \\frac{4\\pi^2 m r}{T^2} \\]","title":"2. Centripetal Force for Circular Motion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-equating-gravitational-and-centripetal-forces","text":"In a stable circular orbit, the gravitational force provides the necessary centripetal force. Thus, we set \\(F_g = F_c\\) : \\[ \\frac{G M m}{r^2} = \\frac{4\\pi^2 m r}{T^2} \\] The mass of the satellite \\(m\\) appears on both sides and, assuming \\(m \\neq 0\\) , can be canceled: \\[ \\frac{G M}{r^2} = \\frac{4\\pi^2 r}{T^2} \\]","title":"3. Equating Gravitational and Centripetal Forces"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-solving-for-the-orbital-period-radius-relationship","text":"To isolate the relationship between \\(T\\) and \\(r\\) , rearrange the equation. Multiply both sides by \\(T^2\\) : \\[ G M T^2 = 4\\pi^2 r^3 \\] Now, divide through by \\(G M\\) : \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This equation reveals that the square of the orbital period \\(T^2\\) is directly proportional to the cube of the orbital radius \\(r^3\\) . The constant of proportionality, \\(\\frac{4\\pi^2}{G M}\\) , depends only on the mass of the central body \\(M\\) and universal constants.","title":"4. Solving for the Orbital Period-Radius Relationship"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-consistency-with-keplers-third-law","text":"Kepler\u2019s Third Law, originally empirical, states that for planets orbiting the Sun, the ratio \\(T^2 / r^3\\) is constant. In Newtonian terms, we rewrite: \\[ T^2 = k r^3 \\] where \\(k = \\frac{4\\pi^2}{G M}\\) is constant for all bodies orbiting the same central mass \\(M\\) . This confirms that our derivation aligns with Kepler\u2019s Third Law for circular orbits. For a given system (e.g., the Solar System), \\(M\\) is the mass of the Sun, and \\(k\\) is identical for all planets assuming circular orbits. To express this in a more familiar form, take the ratio for two orbiting bodies (e.g., planets 1 and 2): \\[ \\frac{T_1^2}{r_1^3} = \\frac{T_2^2}{r_2^3} \\] This dimensionless form emphasizes the universality of the relationship across a single gravitational system.","title":"5. Consistency with Kepler\u2019s Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#implications-of-the-orbital-period-radius-relationship-in-astronomy","text":"The relationship \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) , derived from Newtonian mechanics, underpins critical astronomical applications. This section explores how it enables the determination of central body masses, facilitates distance measurements between celestial bodies, and enhances our understanding of gravitational interactions in planetary systems and satellite orbits.","title":"Implications of the Orbital Period-Radius Relationship in Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-calculating-the-mass-of-a-central-body","text":"The derived relationship allows astronomers to infer the mass of a central body \\(M\\) (e.g., a star or planet) when the orbital period \\(T\\) and radius \\(r\\) of a satellite or orbiting body are measurable. Rearranging the equation for \\(M\\) : \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] Here, \\(G\\) is the gravitational constant ( \\(G \\approx 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) ), \\(r\\) is the orbital radius, and \\(T\\) is the orbital period. For example, consider Earth\u2019s Moon: with \\(T \\approx 27.32 \\, \\text{days}\\) (converted to seconds, \\(T \\approx 2.36 \\times 10^6 \\, \\text{s}\\) ) and \\(r \\approx 3.84 \\times 10^8 \\, \\text{m}\\) , astronomers can compute Earth\u2019s mass \\(M\\) . This method is widely applied beyond the Solar System. For a binary star system, if one star\u2019s orbit has a measured period \\(T_1\\) and semi-major axis \\(r_1\\) (approximated as \\(r\\) for circular orbits), the total system mass can be estimated, assuming the companion\u2019s contribution is accounted for via the center-of-mass relation.","title":"1. Calculating the Mass of a Central Body"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-determining-distances-between-celestial-bodies","text":"The \\(T^2 \\propto r^3\\) relationship also aids in measuring distances between celestial bodies, such as planets or moons, when paired with observational data. If \\(M\\) is known (e.g., the Sun\u2019s mass, \\(M_\\odot \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) ), and \\(T\\) is observed (e.g., via transit timing or Doppler shifts), the orbital radius \\(r\\) can be solved: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] For instance, knowing Earth\u2019s orbital period around the Sun ( \\(T \\approx 365.25 \\, \\text{days} \\approx 3.156 \\times 10^7 \\, \\text{s}\\) ), astronomers calculate its mean distance \\(r \\approx 1.496 \\times 10^{11} \\, \\text{m}\\) (1 AU). This technique extends to exoplanets: if an exoplanet\u2019s period is detected via light curve dips, its distance from its host star can be inferred, assuming the star\u2019s mass is estimated from stellar models. For moons, the method refines distances from their planets. The Moon\u2019s \\(r\\) was historically constrained using its period and Earth\u2019s mass, validated by modern laser ranging.","title":"2. Determining Distances Between Celestial Bodies"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-significance-in-understanding-gravitational-interactions","text":"The relationship illuminates gravitational dynamics across scales. In planetary systems, it governs stability: perturbations in \\(r\\) or \\(T\\) signal additional masses (e.g., undiscovered planets) via deviations from the expected \\(T^2/r^3\\) ratio. For the Solar System, Kepler\u2019s Third Law holds approximately for planets, with slight elliptical corrections: \\[ \\frac{T^2}{r^3} \\approx \\text{constant} = \\frac{4\\pi^2}{G M_\\odot} \\] For satellite orbits, the equation informs design. Geostationary satellites, with \\(T = 24 \\, \\text{hours} \\approx 86,400 \\, \\text{s}\\) , orbit at \\(r \\approx 42,164 \\, \\text{km}\\) from Earth\u2019s center, derived from: \\[ r = \\left( \\frac{G M_\\oplus T^2}{4\\pi^2} \\right)^{1/3} \\] where \\(M_\\oplus \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) . This precision ensures communication satellites maintain fixed positions relative to Earth. Moreover, the law\u2019s universality\u2014applicable to moons, planets, and artificial satellites\u2014underscores gravity\u2019s consistent role. In multi-body systems, deviations from the ideal \\(T^2 \\propto r^3\\) form reveal tidal effects or companion influences, as seen in Jupiter\u2019s Galilean moons.","title":"3. Significance in Understanding Gravitational Interactions"},{"location":"1%20Physics/2%20Gravity/Problem_1/#analysis-of-real-world-examples-orbital-period-and-radius","text":"Kepler\u2019s Third Law, expressed as \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) for circular orbits, implies that the ratio \\(T^2/r^3\\) is constant for objects orbiting the same central body. This section collects orbital data for the Moon around Earth and for Earth and Mars around the Sun, then compares these to demonstrate the law\u2019s consistency across systems.","title":"Analysis of Real-World Examples: Orbital Period and Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-data-collection-moons-orbit-around-earth","text":"The Moon orbits Earth with the following approximate parameters: - Orbital Period ( \\(T\\) ) : The sidereal period is \\(27.322\\) days, or \\(T_m = 27.322 \\times 86,400 = 2.36 \\times 10^6 \\, \\text{s}\\) (converting days to seconds). - Orbital Radius ( \\(r\\) ) : The average distance is \\(r_m = 3.844 \\times 10^8 \\, \\text{m}\\) , based on lunar ranging data. Calculate \\(T_m^2\\) and \\(r_m^3\\) : - \\(T_m^2 = (2.36 \\times 10^6)^2 = 5.57 \\times 10^{12} \\, \\text{s}^2\\) , - \\(r_m^3 = (3.844 \\times 10^8)^3 = 5.67 \\times 10^{25} \\, \\text{m}^3\\) . Thus, the ratio: $$ \\frac{T_m^2}{r_m^3} = \\frac{5.57 \\times 10^{12}}{5.67 \\times 10^{25}} \\approx 9.82 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}. $$ This depends on Earth\u2019s mass \\(M_\\oplus\\) via $ \\frac{4\\pi^2}{G M_\\oplus} $, where \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3 \\text{kg}^{-1} \\text{s}^{-2}\\) and \\(M_\\oplus \\approx 5.972 \\times 10^{24} \\, \\text{kg}\\) .","title":"1. Data Collection: Moon\u2019s Orbit Around Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-data-collection-planetary-orbits-around-the-sun","text":"","title":"2. Data Collection: Planetary Orbits Around the Sun"},{"location":"1%20Physics/2%20Gravity/Problem_1/#earths-orbit","text":"Orbital Period ( \\(T\\) ) : Earth\u2019s sidereal year is \\(365.256\\) days, or \\(T_e = 365.256 \\times 86,400 = 3.156 \\times 10^7 \\, \\text{s}\\) . Orbital Radius ( \\(r\\) ) : The average distance (1 AU) is \\(r_e = 1.496 \\times 10^{11} \\, \\text{m}\\) . Calculate: - \\(T_e^2 = (3.156 \\times 10^7)^2 = 9.96 \\times 10^{14} \\, \\text{s}^2\\) , - \\(r_e^3 = (1.496 \\times 10^{11})^3 = 3.34 \\times 10^{33} \\, \\text{m}^3\\) . Ratio: $$ \\frac{T_e^2}{r_e^3} = \\frac{9.96 \\times 10^{14}}{3.34 \\times 10^{33}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}. $$","title":"Earth\u2019s Orbit"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mars-orbit","text":"Orbital Period ( \\(T\\) ) : Mars\u2019 sidereal year is \\(686.98\\) days, or \\(T_{ma} = 686.98 \\times 86,400 = 5.936 \\times 10^7 \\, \\text{s}\\) . Orbital Radius ( \\(r\\) ) : The average distance is \\(r_{ma} = 2.279 \\times 10^{11} \\, \\text{m}\\) (1.524 AU). Calculate: - \\(T_{ma}^2 = (5.936 \\times 10^7)^2 = 3.52 \\times 10^{15} \\, \\text{s}^2\\) , - \\(r_{ma}^3 = (2.279 \\times 10^{11})^3 = 1.18 \\times 10^{34} \\, \\text{m}^3\\) . Ratio: $$ \\frac{T_{ma}^2}{r_{ma}^3} = \\frac{3.52 \\times 10^{15}}{1.18 \\times 10^{34}} \\approx 2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}. $$","title":"Mars\u2019 Orbit"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-comparison-and-verification","text":"","title":"3. Comparison and Verification"},{"location":"1%20Physics/2%20Gravity/Problem_1/#moon-vs-earthmars","text":"The \\(T^2/r^3\\) ratio for the Moon ( \\(9.82 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}\\) ) differs from Earth and Mars ( \\(2.98 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}\\) ) because the central masses differ: Earth ( \\(M_\\oplus\\) ) for the Moon, and the Sun ( \\(M_\\odot \\approx 1.989 \\times 10^{30} \\, \\text{kg}\\) ) for the planets. Compute the theoretical constants: - For the Moon: $$ \\frac{4\\pi^2}{G M_\\oplus} = \\frac{4\\pi^2}{6.67430 \\times 10^{-11} \\times 5.972 \\times 10^{24}} \\approx 9.90 \\times 10^{-14} \\, \\text{s}^2 \\text{m}^{-3}, $$ which matches \\(9.82 \\times 10^{-14}\\) within observational error. - For Earth and Mars: $$ \\frac{4\\pi^2}{G M_\\odot} = \\frac{4\\pi^2}{6.67430 \\times 10^{-11} \\times 1.989 \\times 10^{30}} \\approx 2.97 \\times 10^{-19} \\, \\text{s}^2 \\text{m}^{-3}, $$ closely aligning with \\(2.98 \\times 10^{-19}\\) .","title":"Moon vs. Earth/Mars"},{"location":"1%20Physics/2%20Gravity/Problem_1/#earth-vs-mars","text":"For Earth and Mars, orbiting the same body (Sun), the ratios are nearly identical ( \\(2.98 \\times 10^{-19}\\) ), confirming Kepler\u2019s Third Law: $$ \\frac{T_e^2}{r_e^3} = \\frac{T_{ma}^2}{r_{ma}^3}. $$ This holds despite Mars\u2019 higher eccentricity (0.093 vs. Earth\u2019s 0.017), as \\(r\\) approximates the semi-major axis.","title":"Earth vs. Mars"},{"location":"1%20Physics/2%20Gravity/Problem_1/#conclusion","text":"The relationship \\(T^2 = \\frac{4\\pi^2}{G M} r^3\\) , derived from gravitational and circular motion dynamics, is a cornerstone of celestial mechanics. It links a central mass \\(M\\) , orbital radius \\(r\\) , and period \\(T\\) , enabling calculations of orbital periods, radii, and central body masses. Its applications range from the Solar System to exoplanetary studies, where it aids in characterizing distant worlds. Observational data confirm its consistency: the \\(T^2/r^3\\) ratio reflects the central mass, with the Moon\u2019s ratio tied to Earth\u2019s mass ( \\(M_\\oplus\\) ) and Earth and Mars sharing a ratio linked to the Sun\u2019s mass ( \\(M_\\odot\\) ). This universality validates Kepler\u2019s Third Law for circular orbits, with theoretical values aligning closely with empirical results. Beyond practical uses, this relationship underscores Newtonian gravity\u2019s predictive power, bridging local and cosmic scales. It also serves as a foundation for exploring elliptical orbits and broader celestial dynamics.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#visualizations","text":"","title":"Visualizations"},{"location":"1%20Physics/2%20Gravity/Problem_1/#website-with-orbit-simulation","text":"Orbit Simulation","title":"Website with orbit simulation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#kepler-third-law-log-scale","text":"import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 M = 1.989e30 # Orbital radii in meters (planets in the Solar System, in AU converted to meters) au_to_m = 1.496e11 planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"] radii_au = np.array([0.39, 0.72, 1.0, 1.52, 5.2, 9.58, 19.2, 30.1]) radii = radii_au * au_to_m # Convert to meters periods = np.sqrt(4 * np.pi**2 * radii**3 / (G * M)) # Kepler's Third Law # Compute log values to make them more readable log_r3 = np.log10(radii**3) log_T2 = np.log10(periods**2) # Plot T^2 vs. r^3 using log-log scale plt.figure(figsize=(8, 6)) plt.scatter(log_r3, log_T2, color='b', label=r'$T^2 \\propto r^3$') # Add planet labels with adjusted positions to avoid overlap for i, planet in enumerate(planets): plt.text(log_r3[i], log_T2[i] + 0.1, planet, fontsize=10, ha='center', va='bottom') plt.xlabel(r\"$\\log_{10}(r^3) \\, (m^3)$\") plt.ylabel(r\"$\\log_{10}(T^2) \\, (s^2)$\") plt.title(\"Kepler's Third Law: $T^2$ vs. $r^3$ (Log Scale)\") plt.legend() plt.grid(True, which=\"both\", linestyle=\"--\", linewidth=0.5) plt.show()","title":"Kepler Third Law (log scale)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#planetary-orbit-animation","text":"import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation from IPython.display import HTML # Constants G = 6.67430e-11 # Gravitational constant M = 1.989e30 # Mass of the Sun (kg) AU = 1.496e11 # Astronomical unit (m) # Define a planet's orbit r = 1.0 * AU # 1 AU T = np.sqrt(4 * np.pi**2 * r**3 / (G * M)) # Orbital period # Time values num_frames = 200 # Number of frames for smooth animation t = np.linspace(0, T, num_frames) theta = 2 * np.pi * t / T # Orbital positions x = r * np.cos(theta) y = r * np.sin(theta) # Create figure fig, ax = plt.subplots(figsize=(6,6)) ax.set_xlim(-1.2 * AU, 1.2 * AU) ax.set_ylim(-1.2 * AU, 1.2 * AU) ax.set_xlabel(\"X Position (m)\") ax.set_ylabel(\"Y Position (m)\") ax.set_title(\"Planetary Orbit Animation\") ax.grid() # Plot Sun ax.plot(0, 0, 'yo', markersize=12, label=\"Sun\") # Planet marker planet, = ax.plot([], [], 'bo', markersize=8, label=\"Planet\") # Animation function def update(frame): planet.set_data([x[frame]], [y[frame]]) # Ensure data is passed as a sequence return planet, # Create animation ani = animation.FuncAnimation(fig, update, frames=num_frames, interval=50, blit=True) # Save as GIF ani.save(\"/content/orbit_animation.gif\", writer=\"pillow\", fps=20) # Display in Colab HTML(ani.to_jshtml())","title":"Planetary Orbit Animation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#gravitational-potential-heatmap","text":"import numpy as np import matplotlib.pyplot as plt # Define grid x = np.linspace(-2e11, 2e11, 100) y = np.linspace(-2e11, 2e11, 100) X, Y = np.meshgrid(x, y) # Compute gravitational potential (V = -GM/r) G = 6.67430e-11 M = 1.989e30 R = np.sqrt(X**2 + Y**2) V = -G * M / (R + 1e7) # Avoid division by zero # Plot heatmap plt.figure(figsize=(6, 6)) plt.contourf(X, Y, V, levels=50, cmap='inferno') plt.colorbar(label=\"Gravitational Potential (J/kg)\") plt.scatter(0, 0, color='yellow', s=100, label=\"Sun\") plt.xlabel(\"x (m)\") plt.ylabel(\"y (m)\") plt.title(\"Gravitational Potential Heatmap\") plt.legend() plt.show()","title":"Gravitational Potential Heatmap"},{"location":"1%20Physics/2%20Gravity/Problem_1/#colab","text":"Colab","title":"Colab"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}